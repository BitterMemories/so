/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 22 09:32:08 GMT 2017
 */

package org.openecomp.mso.db.catalog.beans;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Timestamp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true)
public class ModelRecipeESTest extends ModelRecipeESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      modelRecipe0.setSchemaVersion("594t4m7A7,kaNK");
      String string0 = modelRecipe0.getSchemaVersion();
      assertEquals("594t4m7A7,kaNK", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      Integer integer0 = new Integer(0);
      modelRecipe0.setRecipeTimeout(integer0);
      Integer integer1 = modelRecipe0.getRecipeTimeout();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      Integer integer0 = new Integer(1303);
      modelRecipe0.setRecipeTimeout(integer0);
      Integer integer1 = modelRecipe0.getRecipeTimeout();
      assertEquals(1303, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      Integer integer0 = new Integer((-8));
      modelRecipe0.setRecipeTimeout(integer0);
      Integer integer1 = modelRecipe0.getRecipeTimeout();
      assertEquals((-8), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      modelRecipe0.setOrchestrationUri("+");
      String string0 = modelRecipe0.getOrchestrationUri();
      assertEquals("+", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      modelRecipe0.setModelParamXSD("");
      String string0 = modelRecipe0.getModelParamXSD();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      Integer integer0 = new Integer(1);
      modelRecipe0.setModelId(integer0);
      Integer integer1 = modelRecipe0.getModelId();
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      Integer integer0 = new Integer((-8));
      modelRecipe0.setModelId(integer0);
      Integer integer1 = modelRecipe0.getModelId();
      assertEquals((-8), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      modelRecipe0.setId(2372);
      int int0 = modelRecipe0.getId();
      assertEquals(2372, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      modelRecipe0.setId((-438));
      int int0 = modelRecipe0.getId();
      assertEquals((-438), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      modelRecipe0.setDescription("D|`<b3b");
      String string0 = modelRecipe0.getDescription();
      assertEquals("D|`<b3b", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      Timestamp timestamp0 = new Timestamp(0L);
      modelRecipe0.setCreated(timestamp0);
      Timestamp timestamp1 = modelRecipe0.getCreated();
      assertSame(timestamp1, timestamp0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      Timestamp timestamp0 = new Timestamp(619L);
      modelRecipe0.setCreated(timestamp0);
      Timestamp timestamp1 = modelRecipe0.getCreated();
      assertEquals("1970-01-01 00:00:00.619", timestamp1.toString());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      modelRecipe0.setAction("hz4FY");
      String string0 = modelRecipe0.getAction();
      assertEquals("hz4FY", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      modelRecipe0.setAction("");
      String string0 = modelRecipe0.getAction();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      // Undeclared exception!
      try {
        modelRecipe0.toString();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.openecomp.mso.db.catalog.beans.ModelRecipe", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      Integer integer0 = new Integer(7);
      modelRecipe0.setRecipeTimeout(integer0);
      modelRecipe0.setModelId(integer0);
      String string0 = modelRecipe0.toString();
      assertEquals("ModelRecipe: modelId=7,action=null,schemaVersion=null,orchestrationUri=null,modelParamXSD=null,recipeTimeout=7", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      Integer integer0 = modelRecipe0.getModelId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      Integer integer0 = new Integer(0);
      modelRecipe0.setRecipeTimeout(integer0);
      modelRecipe0.setModelId(integer0);
      Timestamp timestamp0 = new Timestamp((long) 0);
      modelRecipe0.setCreated(timestamp0);
      String string0 = modelRecipe0.toString();
      assertEquals("ModelRecipe: modelId=0,action=null,schemaVersion=null,orchestrationUri=null,modelParamXSD=null,recipeTimeout=0,created=1/1/70 12:00 AM", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      String string0 = modelRecipe0.getAction();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      modelRecipe0.setDescription("");
      String string0 = modelRecipe0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      modelRecipe0.setModelParamXSD("nb[xSaP");
      String string0 = modelRecipe0.getModelParamXSD();
      assertEquals("nb[xSaP", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      modelRecipe0.setSchemaVersion("");
      String string0 = modelRecipe0.getSchemaVersion();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      Integer integer0 = new Integer(0);
      modelRecipe0.setModelId(integer0);
      Integer integer1 = modelRecipe0.getModelId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      int int0 = modelRecipe0.getId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      String string0 = modelRecipe0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      String string0 = modelRecipe0.getSchemaVersion();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      Integer integer0 = modelRecipe0.getRecipeTimeout();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      String string0 = modelRecipe0.getOrchestrationUri();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      Timestamp timestamp0 = modelRecipe0.getCreated();
      assertNull(timestamp0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      modelRecipe0.setOrchestrationUri("");
      String string0 = modelRecipe0.getOrchestrationUri();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ModelRecipe modelRecipe0 = new ModelRecipe();
      String string0 = modelRecipe0.getModelParamXSD();
      assertNull(string0);
  }
}
