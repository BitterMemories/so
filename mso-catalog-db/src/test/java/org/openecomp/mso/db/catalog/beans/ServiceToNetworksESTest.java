/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 22 09:34:56 GMT 2017
 */

package org.openecomp.mso.db.catalog.beans;

import org.junit.Test;
import static org.junit.Assert.*;
import java.sql.Timestamp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true)
public class ServiceToNetworksESTest extends ServiceToNetworksESTestscaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ServiceToNetworks serviceToNetworks0 = new ServiceToNetworks();
      serviceToNetworks0.setServiceModelUuid("XcrRZj-Y)7");
      String string0 = serviceToNetworks0.getServiceModelUuid();
      assertEquals("XcrRZj-Y)7", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ServiceToNetworks serviceToNetworks0 = new ServiceToNetworks();
      serviceToNetworks0.setNetworkModelCustomizationUuid("XcrRZj-Y)7");
      String string0 = serviceToNetworks0.getNetworkModelCustomizationUuid();
      assertEquals("XcrRZj-Y)7", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ServiceToNetworks serviceToNetworks0 = new ServiceToNetworks();
      Timestamp timestamp0 = new Timestamp(4701L);
      serviceToNetworks0.setCreated(timestamp0);
      Timestamp timestamp1 = serviceToNetworks0.getCreated();
      assertEquals(701000000, timestamp1.getNanos());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ServiceToNetworks serviceToNetworks0 = new ServiceToNetworks();
      Timestamp timestamp0 = serviceToNetworks0.getCreated();
      assertNull(timestamp0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ServiceToNetworks serviceToNetworks0 = new ServiceToNetworks();
      String string0 = serviceToNetworks0.getNetworkModelCustomizationUuid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ServiceToNetworks serviceToNetworks0 = new ServiceToNetworks();
      String string0 = serviceToNetworks0.getServiceModelUuid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ServiceToNetworks serviceToNetworks0 = new ServiceToNetworks();
      String string0 = serviceToNetworks0.toString();
      assertEquals("ServiceToNetworks mapping: serviceModelUuid=null,networkModelCustomizationUuid=null", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ServiceToNetworks serviceToNetworks0 = new ServiceToNetworks();
      Timestamp timestamp0 = new Timestamp(0L);
      serviceToNetworks0.setCreated(timestamp0);
      Timestamp timestamp1 = serviceToNetworks0.getCreated();
      assertEquals(0, timestamp1.getNanos());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ServiceToNetworks serviceToNetworks0 = new ServiceToNetworks();
      serviceToNetworks0.setNetworkModelCustomizationUuid("");
      String string0 = serviceToNetworks0.getNetworkModelCustomizationUuid();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ServiceToNetworks serviceToNetworks0 = new ServiceToNetworks();
      serviceToNetworks0.setServiceModelUuid("");
      String string0 = serviceToNetworks0.getServiceModelUuid();
      assertEquals("", string0);
  }
}
