/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 21 15:49:25 GMT 2017
 */

package org.openecomp.mso.db.catalog.beans;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.PrivateAccess;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true)
public class ServiceMacroHolderESTest extends ServiceMacroHolderESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Service service0 = new Service();
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder(service0);
      serviceMacroHolder0.setVnfResources((ArrayList<VnfResource>) null);
      ArrayList<VnfResource> arrayList0 = serviceMacroHolder0.getVnfResources();
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder();
      VnfResource vnfResource0 = new VnfResource();
      serviceMacroHolder0.addVnfResource(vnfResource0);
      ArrayList<VnfResource> arrayList0 = serviceMacroHolder0.getVnfResources();
      assertEquals(1, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder();
      Service service0 = serviceMacroHolder0.getService();
      assertNull(service0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Service service0 = new Service();
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder(service0);
      service0.setId(1124);
      Service service1 = serviceMacroHolder0.getService();
      assertNull(service1.getServiceNameVersionId());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Service service0 = new Service();
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder(service0);
      service0.setId((-760));
      Service service1 = serviceMacroHolder0.getService();
      assertNull(service1.getServiceNameVersionId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder();
      NetworkResourceCustomization networkResourceCustomization0 = new NetworkResourceCustomization();
      serviceMacroHolder0.addNetworkResourceCustomization(networkResourceCustomization0);
      ArrayList<NetworkResourceCustomization> arrayList0 = serviceMacroHolder0.getNetworkResourceCustomization();
      assertFalse(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder();
      serviceMacroHolder0.setAllottedResourceCustomization((ArrayList<AllottedResourceCustomization>) null);
      ArrayList<AllottedResourceCustomization> arrayList0 = serviceMacroHolder0.getAllottedResourceCustomization();
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder();
      AllottedResourceCustomization allottedResourceCustomization0 = new AllottedResourceCustomization();
      serviceMacroHolder0.addAllottedResourceCustomization(allottedResourceCustomization0);
      ArrayList<AllottedResourceCustomization> arrayList0 = serviceMacroHolder0.getAllottedResourceCustomization();
      assertFalse(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder();
      serviceMacroHolder0.setAllottedResourceCustomization((ArrayList<AllottedResourceCustomization>) null);
      String string0 = serviceMacroHolder0.toString();
      assertEquals("ServicePlus: service: nullnone", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder();
      serviceMacroHolder0.setNetworkResourceCustomization((ArrayList<NetworkResourceCustomization>) null);
      String string0 = serviceMacroHolder0.toString();
      assertEquals("ServicePlus: service: nullnone", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Service service0 = mock(Service.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(service0).toString();
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder(service0);
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) serviceMacroHolder0);
      PrivateAccess.setVariable((Class<ServiceMacroHolder>) ServiceMacroHolder.class, serviceMacroHolder0, "vnfResources", (Object) arrayList0);
      // Undeclared exception!
      try {
        serviceMacroHolder0.toString();
        fail("Expecting exception: ClassCastException");

      } catch(ClassCastException e) {
         //
         // org.openecomp.mso.db.catalog.beans.ServiceMacroHolder cannot be cast to org.openecomp.mso.db.catalog.beans.VnfResource
         //
         verifyException("org.openecomp.mso.db.catalog.beans.ServiceMacroHolder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder();
      serviceMacroHolder0.setVnfResources((ArrayList<VnfResource>) null);
      String string0 = serviceMacroHolder0.toString();
      assertEquals("ServicePlus: service: nullnone", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Service service0 = new Service();
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder(service0);
      // Undeclared exception!
      try {
        serviceMacroHolder0.toString();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.openecomp.mso.db.catalog.beans.Service", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder();
      AllottedResourceCustomization allottedResourceCustomization0 = new AllottedResourceCustomization();
      serviceMacroHolder0.addAllottedResourceCustomization(allottedResourceCustomization0);
      String string0 = serviceMacroHolder0.toString();
      assertEquals("ServicePlus: service: nullnoneAllottedResourceCustomizations:ARC[0]: modelName=null,modelVersion=null,version=null,modelUuid=null,modelInvariantUuid=null,modelCustomizationUuid=null,modelInstanceName=null,description=null,modelInstanceName=null,created=null", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder();
      NetworkResourceCustomization networkResourceCustomization0 = new NetworkResourceCustomization();
      serviceMacroHolder0.addNetworkResourceCustomization(networkResourceCustomization0);
      String string0 = serviceMacroHolder0.toString();
      assertEquals("ServicePlus: service: nullnoneNetworkResourceCustomizations:NRC[0]: modelName=nullmodelUuid=nullmodelUuid=nullmodelInvariantUuid=nullmodelVersion=nullmodelCustomizationUuid=nullmodelInstanceName=nullnetworkResourceId=0networkType=null", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder();
      NetworkResourceCustomization networkResourceCustomization0 = new NetworkResourceCustomization();
      serviceMacroHolder0.setNetworkResourceCustomization((ArrayList<NetworkResourceCustomization>) null);
      serviceMacroHolder0.addNetworkResourceCustomization(networkResourceCustomization0);
      assertNull(networkResourceCustomization0.getModelInstanceName());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder();
      serviceMacroHolder0.setVnfResources((ArrayList<VnfResource>) null);
      VnfResource vnfResource0 = new VnfResource();
      serviceMacroHolder0.addVnfResource(vnfResource0);
      assertNull(vnfResource0.getModelCustomizationUuid());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder();
      VnfResource vnfResource0 = new VnfResource();
      serviceMacroHolder0.addVnfResource(vnfResource0);
      String string0 = serviceMacroHolder0.toString();
      assertEquals("ServicePlus: service: nullVnfResources: , vnfResource[0]:VNF=null,version=null,mode=null,template=null,envtId=null,asdcUuid=null,aicVersionMin=null,aicVersionMax=null,modelInvariantUuid=null,modelVersion=null,modelCustomizationName=null,modelName=null,serviceModelInvariantUUID=null,modelCustomizationUuid=nullVfModules: NONE", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder();
      serviceMacroHolder0.addVnfResource((VnfResource) null);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Service service0 = new Service();
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder(service0);
      serviceMacroHolder0.setNetworkResourceCustomization((ArrayList<NetworkResourceCustomization>) null);
      ArrayList<NetworkResourceCustomization> arrayList0 = serviceMacroHolder0.getNetworkResourceCustomization();
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Service service0 = new Service();
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder(service0);
      Service service1 = serviceMacroHolder0.getService();
      assertNull(service1.getModelInvariantUUID());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Service service0 = new Service();
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder(service0);
      ArrayList<NetworkResourceCustomization> arrayList0 = serviceMacroHolder0.getNetworkResourceCustomization();
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder();
      serviceMacroHolder0.setAllottedResourceCustomization((ArrayList<AllottedResourceCustomization>) null);
      AllottedResourceCustomization allottedResourceCustomization0 = new AllottedResourceCustomization();
      serviceMacroHolder0.addAllottedResourceCustomization(allottedResourceCustomization0);
      assertNull(allottedResourceCustomization0.getVersion());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder();
      Service service0 = new Service();
      serviceMacroHolder0.setService(service0);
      assertNull(service0.getModelInvariantUUID());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Service service0 = new Service();
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder(service0);
      ArrayList<AllottedResourceCustomization> arrayList0 = serviceMacroHolder0.getAllottedResourceCustomization();
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Service service0 = new Service();
      ServiceMacroHolder serviceMacroHolder0 = new ServiceMacroHolder(service0);
      ArrayList<VnfResource> arrayList0 = serviceMacroHolder0.getVnfResources();
      assertTrue(arrayList0.isEmpty());
  }
}
