/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 20 14:07:08 GMT 2017
 */

package org.openecomp.mso.adapters.sdncrest;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true)
public class SDNCServiceResponseESTest extends SDNCServiceResponseESTestscaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SDNCServiceResponse sDNCServiceResponse0 = new SDNCServiceResponse();
      sDNCServiceResponse0.addParam((String) null, "");
      assertNull(sDNCServiceResponse0.getResponseMessage());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SDNCServiceResponse sDNCServiceResponse0 = new SDNCServiceResponse();
      sDNCServiceResponse0.addParam("", "");
      Map<String, String> map0 = sDNCServiceResponse0.getParams();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SDNCServiceResponse sDNCServiceResponse0 = new SDNCServiceResponse();
      sDNCServiceResponse0.addParam("", "");
      sDNCServiceResponse0.addParam("DYNAMIC", "DYNAMIC");
      assertNull(sDNCServiceResponse0.getResponseMessage());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SDNCServiceResponse sDNCServiceResponse0 = new SDNCServiceResponse();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      sDNCServiceResponse0.setParams(hashMap0);
      Map<String, String> map0 = sDNCServiceResponse0.getParams();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SDNCServiceResponse sDNCServiceResponse0 = new SDNCServiceResponse("", "", "", "");
      assertEquals("", sDNCServiceResponse0.getResponseCode());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SDNCServiceResponse sDNCServiceResponse0 = new SDNCServiceResponse();
      Map<String, String> map0 = sDNCServiceResponse0.getParams();
      assertNull(map0);
  }
}
