/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 20 14:09:38 GMT 2017
 */

package org.openecomp.mso.adapters.sdncrest;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true)
public class ServiceInformationESTest extends ServiceInformationESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ServiceInformation serviceInformation0 = new ServiceInformation("J|^", ":N1Q`D JY", "org.openecomp.mso.adapters.sdncrest.ServiceInformation", ":N1Q`D JY");
      String string0 = serviceInformation0.getSubscriberName();
      assertEquals("org.openecomp.mso.adapters.sdncrest.ServiceInformation", string0);
      assertEquals("J|^", serviceInformation0.getServiceType());
      assertEquals(":N1Q`D JY", serviceInformation0.getSubscriberGlobalId());
      assertEquals(":N1Q`D JY", serviceInformation0.getServiceInstanceId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ServiceInformation serviceInformation0 = new ServiceInformation("", (String) null, "", "");
      String string0 = serviceInformation0.getSubscriberName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ServiceInformation serviceInformation0 = new ServiceInformation("J|^", ":N1Q`D JY", "org.openecomp.mso.adapters.sdncrest.ServiceInformation", ":N1Q`D JY");
      String string0 = serviceInformation0.getSubscriberGlobalId();
      assertEquals(":N1Q`D JY", serviceInformation0.getServiceInstanceId());
      assertEquals("org.openecomp.mso.adapters.sdncrest.ServiceInformation", serviceInformation0.getSubscriberName());
      assertEquals("J|^", serviceInformation0.getServiceType());
      assertEquals(":N1Q`D JY", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ServiceInformation serviceInformation0 = new ServiceInformation();
      serviceInformation0.setSubscriberGlobalId("");
      String string0 = serviceInformation0.getSubscriberGlobalId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ServiceInformation serviceInformation0 = new ServiceInformation();
      serviceInformation0.setServiceType("org.openecomp.mso.adapters.sdncrest.ServiceInformation");
      String string0 = serviceInformation0.getServiceType();
      assertEquals("org.openecomp.mso.adapters.sdncrest.ServiceInformation", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ServiceInformation serviceInformation0 = new ServiceInformation();
      serviceInformation0.setServiceInstanceId("q3jc2(qb=E+3uz_L%");
      String string0 = serviceInformation0.getServiceInstanceId();
      assertEquals("q3jc2(qb=E+3uz_L%", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ServiceInformation serviceInformation0 = new ServiceInformation();
      serviceInformation0.setServiceInstanceId("");
      String string0 = serviceInformation0.getServiceInstanceId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ServiceInformation serviceInformation0 = new ServiceInformation();
      String string0 = serviceInformation0.getSubscriberName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ServiceInformation serviceInformation0 = new ServiceInformation();
      serviceInformation0.setSubscriberName((String) null);
      assertNull(serviceInformation0.getServiceInstanceId());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ServiceInformation serviceInformation0 = new ServiceInformation();
      String string0 = serviceInformation0.getServiceInstanceId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ServiceInformation serviceInformation0 = new ServiceInformation();
      String string0 = serviceInformation0.getSubscriberGlobalId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ServiceInformation serviceInformation0 = new ServiceInformation();
      String string0 = serviceInformation0.getServiceType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ServiceInformation serviceInformation0 = new ServiceInformation();
      serviceInformation0.setServiceType("");
      String string0 = serviceInformation0.getServiceType();
      assertEquals("", string0);
  }
}
